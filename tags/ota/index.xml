<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ota on Foundries.io</title><link>https://foundries.io/tags/ota/</link><description>Recent content in Ota on Foundries.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 26 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://foundries.io/tags/ota/index.xml" rel="self" type="application/rss+xml"/><item><title>Sex and the art of IoT</title><link>https://foundries.io/insights/2019/09/26/20190926-sex-and-the-art-of-iot/</link><pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2019/09/26/20190926-sex-and-the-art-of-iot/</guid><description>&lt;p&gt;These are two subjects that tend not to go together in a standard blog, but bear with me please, there is a connection.&lt;/p&gt;</description></item><item><title>Introducing Aktualizr-lite</title><link>https://foundries.io/insights/2019/09/08/aktualizr-lite/</link><pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2019/09/08/aktualizr-lite/</guid><description>&lt;p&gt;Earlier this year, I found myself pushing the idea of an &amp;ldquo;&lt;a href=&#34;https://github.com/advancedtelematic/aktualizr/issues/1056&#34;&gt;anonymous mode&lt;/a&gt;&amp;ldquo;
for the Aktualizr project which is the OTA agent running in the LMP. This
turned into &amp;ldquo;aktualizr-lite&amp;rdquo; and has recently become the default OTA agent
used by the LMP. This article explains what aktualizr-lite is and why we are
using it.&lt;/p&gt;</description></item><item><title>Keeping Edge devices secure from IoT hackers</title><link>https://foundries.io/insights/2019/07/15/20190715-secure-edge-devices/</link><pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2019/07/15/20190715-secure-edge-devices/</guid><description>&lt;p&gt;Edge devices are now at the frontline of security attacks on manufacturing and enterprise organisations. Hackers are extorting more money out of a wider range of companies and corporations, with the latest estimates being that attacks have increased by 500% in the last year.&lt;/p&gt;</description></item><item><title>The OTA updatable OS for your next IoT or Edge Product</title><link>https://foundries.io/insights/2019/07/05/20190705-ota-updatable-os/</link><pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2019/07/05/20190705-ota-updatable-os/</guid><description>&lt;p&gt;Why is there no Android or Red Hat Enterprise Linux for IoT and Edge devices? The &amp;ldquo;one size fits all&amp;rdquo; approach of a modern Linux distro does not meet the requirements of the IoT and Edge markets because of the diversity of hardware and use cases - from cellular-connected sensors, to industrial IoT infrastructure, to gateways and even autonomous vehicle computing. More complex use-cases and more powerful processors almost universally use some variant of Linux. Simpler devices such as sensors typically use an RTOS. In this article we focus on Linux - a future article will explore the many RTOS options.&lt;/p&gt;</description></item><item><title>Foundries.io makes IoT deployable using Linux and Zephyr microPlatformsâ„¢</title><link>https://foundries.io/insights/2019/06/05/20190605-deployable-iot-zmp-lmp/</link><pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2019/06/05/20190605-deployable-iot-zmp-lmp/</guid><description>&lt;h3 id=&#34;brings-secure-supportable-longevity-to-iot-installed-devices&#34;&gt;Brings secure, supportable longevity to IoT installed devices&lt;/h3&gt;
&lt;p&gt;LONDON, UK; 5 June 2019: Foundries.io, innovator in the deployment of Linux and Zephyr for Edge and IoT solutions, announces key customers showcasing its ability to provide secure, supportable platforms, realising the full value of IoT.&lt;/p&gt;</description></item><item><title>LTS Kernel is a barrier to building sustainable secure IoT and edge devices</title><link>https://foundries.io/insights/2019/02/28/20190228-lts-kernel-barrier-iot/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2019/02/28/20190228-lts-kernel-barrier-iot/</guid><description>&lt;p&gt;IoT has experienced large levels of hype over recent years but is now turning into a
reality with over 30 billion&lt;sup&gt;*&lt;/sup&gt; IoT devices expected to be connected by 2020.
This has moved IoT from early installs to full production and ongoing maintenance.&lt;/p&gt;</description></item><item><title>Foundries.io @ Embedded World 2019</title><link>https://foundries.io/insights/2019/02/19/20190219-foundriesio-at-ew2019/</link><pubDate>Tue, 19 Feb 2019 15:00:00 +0000</pubDate><guid>https://foundries.io/insights/2019/02/19/20190219-foundriesio-at-ew2019/</guid><description>&lt;p&gt;Foundries.io team are preparing to join the embedded industry annual exodus to
Nuremberg and &lt;a href=&#34;https://www.embedded-world.de/en&#34;&gt;Embedded World&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Adding a REST API to OTA Connect</title><link>https://foundries.io/insights/2018/08/09/ota-api/</link><pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2018/08/09/ota-api/</guid><description>&lt;p&gt;The &lt;a href=&#34;https://foundries.io/insights/2018/07/12/ota-part-4/&#34;&gt;OTA blog series&lt;/a&gt; left users with a secured
OTA Connect server. This article will describe how you can deploy
an easy-to-use REST API to manage your devices.&lt;/p&gt;</description></item><item><title>Securing OTA Connect</title><link>https://foundries.io/insights/2018/07/12/ota-part-4/</link><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2018/07/12/ota-part-4/</guid><description>&lt;p&gt;&lt;a href=&#34;https://foundries.io/insights/2018/06/27/ota-part-3/&#34;&gt;Part three&lt;/a&gt; of this blog series showed how to
deploy an OTA Connect service in Google Kubernetes Engine that had
a few security holes. This article will describe how to secure it.&lt;/p&gt;</description></item><item><title>Deploying OTA Connect</title><link>https://foundries.io/insights/2018/06/27/ota-part-3/</link><pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2018/06/27/ota-part-3/</guid><description>&lt;p&gt;Continuing with the OTA blog series &lt;a href=&#34;https://foundries.io/insights/2018/05/25/ota-part-1/&#34;&gt;part one&lt;/a&gt; and &lt;a href=&#34;https://foundries.io/insights/2018/06/14/ota-part-2/&#34;&gt;part two&lt;/a&gt;, this article shows you how to deploy OTA Connect using the OTA Community Edition into Google&amp;rsquo;s Kubernetes Engine (GKE). After completion of these instructions, you&amp;rsquo;ll have an OTA Connect server available on the internet with a single QEMU device registered to it.&lt;/p&gt;</description></item><item><title>What Is OTA Connect</title><link>https://foundries.io/insights/2018/06/14/ota-part-2/</link><pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2018/06/14/ota-part-2/</guid><description>&lt;p&gt;Continuing with the &lt;a href=&#34;https://foundries.io/insights/2018/05/25/ota-part-1/&#34;&gt;OTA blog series&lt;/a&gt;, this article will explain what &lt;a href=&#34;https://github.com/advancedtelematic/ota-community-edition&#34;&gt;OTA Connect&lt;/a&gt; is and how it implements the TUF/Uptane/OSTree specifications.&lt;/p&gt;</description></item><item><title>How We Chose a Software Update System</title><link>https://foundries.io/insights/2018/05/25/ota-part-1/</link><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2018/05/25/ota-part-1/</guid><description>&lt;p&gt;One of the first big decisions we had to make for the Linux microPlatform was our Over-The-Air Update (OTA) strategy. This decision required a lot of time, meetings, beer, and coffee. This article is the first of a small series explaining our recommended approach to OTA for the LMP. This article explains how and why we ultimately chose &lt;a href=&#34;https://www.here.com/en/products-services/here-automotive-suite/ota-software-management/here-ota-connect&#34;&gt;OTA Connect&lt;/a&gt; and its open source deployment project &lt;a href=&#34;https://github.com/advancedtelematic/ota-community-edition&#34;&gt;OTA Community Edition&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Zephyr microPlatform, Zephyr OTA via DFU/mcumgr</title><link>https://foundries.io/insights/2018/04/17/20180417-mcumgr-dfu/</link><pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2018/04/17/20180417-mcumgr-dfu/</guid><description>&lt;p&gt;In this blog we describe how to use the Zephyr microPlatform and the in-tree
Zephyr samples to build, flash and perform an over the air (OTA) update of a
Zephyr application over Bluetooth Low Energy (BLE). This demonstration uses the
DFU support within Zephyr provided by
&lt;a href=&#34;http://docs.zephyrproject.org/subsystems/mgmt.html&#34;&gt;mcumgr&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Linux microPlatform, now with OTA updates (beta)</title><link>https://foundries.io/insights/2018/04/11/20180411-over-the-air/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2018/04/11/20180411-over-the-air/</guid><description>&lt;p&gt;Starting with Linux microPlatform update 0.13, we are including support for over-the-air (OTA) updates.&lt;/p&gt;</description></item><item><title>Using AT&amp;T&#39;s IoT Dev Kit</title><link>https://foundries.io/insights/2018/04/11/20180411-iot-dev-kit/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2018/04/11/20180411-iot-dev-kit/</guid><description>&lt;p&gt;In the Zephyr microPlatform update 0.13, we have released support for the
&lt;a href=&#34;https://marketplace.att.com/products/att-iot-starter-kit-lte-m&#34;&gt;AT&amp;amp;T IoT Starter Kit (LTE-M)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With the following instructions, you can start using Zephyr and the IoT Starter Kit with LWM2M in a matter of minutes.&lt;/p&gt;</description></item><item><title>Update an embedded device with LwM2M</title><link>https://foundries.io/insights/2018/01/17/20180117-lwm2m-update/</link><pubDate>Wed, 17 Jan 2018 00:00:00 +0000</pubDate><guid>https://foundries.io/insights/2018/01/17/20180117-lwm2m-update/</guid><description>&lt;p&gt;&lt;a href=&#34;http://openmobilealliance.org/iot/lightweight-m2m-lwm2m&#34;&gt;OMA Lightweight M2M&lt;/a&gt; (LWM2M) offers a firmware object interface for directing client devices to download and apply firmware updates. Using the Zephyr microPlaform and Eclipse&amp;rsquo;s &lt;a href=&#34;https://www.eclipse.org/leshan/&#34;&gt;Leshan Demo Server&lt;/a&gt;, this seemingly complex process can be demonstrated in a few easy steps.&lt;/p&gt;
&lt;p&gt;To illustrate how a firmware update is delivered via LwM2M, you will make a small change to the Zephyr microPlatform (ZMP) LwM2M sample project which disables the Light Control object. When flashed to an embedded device, the Leshan UI will be missing the &amp;ldquo;Light Control&amp;rdquo; portion near the bottom of the client detail page. Once this &amp;ldquo;bug&amp;rdquo; is found, you will fix the LwM2M sample, recompile and deliver your updated firmware as an over the air (OTA) update. The new firmware can be confirmed by locating the &amp;ldquo;Light Control&amp;rdquo; object in the Leshan UI.&lt;/p&gt;</description></item></channel></rss>